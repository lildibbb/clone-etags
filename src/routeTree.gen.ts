/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as DashboardRespondenRespondenImport } from './routes/dashboard/responden/_responden'
import { Route as DashboardPengaduPengaduImport } from './routes/dashboard/pengadu/_pengadu'
import { Route as DashboardPegawaiPegawaiImport } from './routes/dashboard/pegawai/_pegawai'
import { Route as DashboardAdminAdminImport } from './routes/dashboard/admin/_admin'
import { Route as DashboardAdminAdminInternalUserImport } from './routes/dashboard/admin/_admin.internalUser'
import { Route as DashboardAdminAdminHomeImport } from './routes/dashboard/admin/_admin.home'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()
const DashboardRespondenImport = createFileRoute('/dashboard/responden')()
const DashboardPengaduImport = createFileRoute('/dashboard/pengadu')()
const DashboardPegawaiImport = createFileRoute('/dashboard/pegawai')()
const DashboardAdminImport = createFileRoute('/dashboard/admin')()

// Create/Update Routes

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const DashboardRespondenRoute = DashboardRespondenImport.update({
  id: '/dashboard/responden',
  path: '/dashboard/responden',
  getParentRoute: () => rootRoute,
} as any)

const DashboardPengaduRoute = DashboardPengaduImport.update({
  id: '/dashboard/pengadu',
  path: '/dashboard/pengadu',
  getParentRoute: () => rootRoute,
} as any)

const DashboardPegawaiRoute = DashboardPegawaiImport.update({
  id: '/dashboard/pegawai',
  path: '/dashboard/pegawai',
  getParentRoute: () => rootRoute,
} as any)

const DashboardAdminRoute = DashboardAdminImport.update({
  id: '/dashboard/admin',
  path: '/dashboard/admin',
  getParentRoute: () => rootRoute,
} as any)

const DashboardRespondenRespondenRoute =
  DashboardRespondenRespondenImport.update({
    id: '/_responden',
    getParentRoute: () => DashboardRespondenRoute,
  } as any)

const DashboardPengaduPengaduRoute = DashboardPengaduPengaduImport.update({
  id: '/_pengadu',
  getParentRoute: () => DashboardPengaduRoute,
} as any)

const DashboardPegawaiPegawaiRoute = DashboardPegawaiPegawaiImport.update({
  id: '/_pegawai',
  getParentRoute: () => DashboardPegawaiRoute,
} as any)

const DashboardAdminAdminRoute = DashboardAdminAdminImport.update({
  id: '/_admin',
  getParentRoute: () => DashboardAdminRoute,
} as any)

const DashboardAdminAdminInternalUserRoute =
  DashboardAdminAdminInternalUserImport.update({
    id: '/internalUser',
    path: '/internalUser',
    getParentRoute: () => DashboardAdminAdminRoute,
  } as any)

const DashboardAdminAdminHomeRoute = DashboardAdminAdminHomeImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => DashboardAdminAdminRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/admin': {
      id: '/dashboard/admin'
      path: '/dashboard/admin'
      fullPath: '/dashboard/admin'
      preLoaderRoute: typeof DashboardAdminImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/admin/_admin': {
      id: '/dashboard/admin/_admin'
      path: '/dashboard/admin'
      fullPath: '/dashboard/admin'
      preLoaderRoute: typeof DashboardAdminAdminImport
      parentRoute: typeof DashboardAdminRoute
    }
    '/dashboard/pegawai': {
      id: '/dashboard/pegawai'
      path: '/dashboard/pegawai'
      fullPath: '/dashboard/pegawai'
      preLoaderRoute: typeof DashboardPegawaiImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/pegawai/_pegawai': {
      id: '/dashboard/pegawai/_pegawai'
      path: '/dashboard/pegawai'
      fullPath: '/dashboard/pegawai'
      preLoaderRoute: typeof DashboardPegawaiPegawaiImport
      parentRoute: typeof DashboardPegawaiRoute
    }
    '/dashboard/pengadu': {
      id: '/dashboard/pengadu'
      path: '/dashboard/pengadu'
      fullPath: '/dashboard/pengadu'
      preLoaderRoute: typeof DashboardPengaduImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/pengadu/_pengadu': {
      id: '/dashboard/pengadu/_pengadu'
      path: '/dashboard/pengadu'
      fullPath: '/dashboard/pengadu'
      preLoaderRoute: typeof DashboardPengaduPengaduImport
      parentRoute: typeof DashboardPengaduRoute
    }
    '/dashboard/responden': {
      id: '/dashboard/responden'
      path: '/dashboard/responden'
      fullPath: '/dashboard/responden'
      preLoaderRoute: typeof DashboardRespondenImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/responden/_responden': {
      id: '/dashboard/responden/_responden'
      path: '/dashboard/responden'
      fullPath: '/dashboard/responden'
      preLoaderRoute: typeof DashboardRespondenRespondenImport
      parentRoute: typeof DashboardRespondenRoute
    }
    '/dashboard/admin/_admin/home': {
      id: '/dashboard/admin/_admin/home'
      path: '/home'
      fullPath: '/dashboard/admin/home'
      preLoaderRoute: typeof DashboardAdminAdminHomeImport
      parentRoute: typeof DashboardAdminAdminImport
    }
    '/dashboard/admin/_admin/internalUser': {
      id: '/dashboard/admin/_admin/internalUser'
      path: '/internalUser'
      fullPath: '/dashboard/admin/internalUser'
      preLoaderRoute: typeof DashboardAdminAdminInternalUserImport
      parentRoute: typeof DashboardAdminAdminImport
    }
  }
}

// Create and export the route tree

interface DashboardAdminAdminRouteChildren {
  DashboardAdminAdminHomeRoute: typeof DashboardAdminAdminHomeRoute
  DashboardAdminAdminInternalUserRoute: typeof DashboardAdminAdminInternalUserRoute
}

const DashboardAdminAdminRouteChildren: DashboardAdminAdminRouteChildren = {
  DashboardAdminAdminHomeRoute: DashboardAdminAdminHomeRoute,
  DashboardAdminAdminInternalUserRoute: DashboardAdminAdminInternalUserRoute,
}

const DashboardAdminAdminRouteWithChildren =
  DashboardAdminAdminRoute._addFileChildren(DashboardAdminAdminRouteChildren)

interface DashboardAdminRouteChildren {
  DashboardAdminAdminRoute: typeof DashboardAdminAdminRouteWithChildren
}

const DashboardAdminRouteChildren: DashboardAdminRouteChildren = {
  DashboardAdminAdminRoute: DashboardAdminAdminRouteWithChildren,
}

const DashboardAdminRouteWithChildren = DashboardAdminRoute._addFileChildren(
  DashboardAdminRouteChildren,
)

interface DashboardPegawaiRouteChildren {
  DashboardPegawaiPegawaiRoute: typeof DashboardPegawaiPegawaiRoute
}

const DashboardPegawaiRouteChildren: DashboardPegawaiRouteChildren = {
  DashboardPegawaiPegawaiRoute: DashboardPegawaiPegawaiRoute,
}

const DashboardPegawaiRouteWithChildren =
  DashboardPegawaiRoute._addFileChildren(DashboardPegawaiRouteChildren)

interface DashboardPengaduRouteChildren {
  DashboardPengaduPengaduRoute: typeof DashboardPengaduPengaduRoute
}

const DashboardPengaduRouteChildren: DashboardPengaduRouteChildren = {
  DashboardPengaduPengaduRoute: DashboardPengaduPengaduRoute,
}

const DashboardPengaduRouteWithChildren =
  DashboardPengaduRoute._addFileChildren(DashboardPengaduRouteChildren)

interface DashboardRespondenRouteChildren {
  DashboardRespondenRespondenRoute: typeof DashboardRespondenRespondenRoute
}

const DashboardRespondenRouteChildren: DashboardRespondenRouteChildren = {
  DashboardRespondenRespondenRoute: DashboardRespondenRespondenRoute,
}

const DashboardRespondenRouteWithChildren =
  DashboardRespondenRoute._addFileChildren(DashboardRespondenRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/login': typeof LoginRoute
  '/dashboard/admin': typeof DashboardAdminAdminRouteWithChildren
  '/dashboard/pegawai': typeof DashboardPegawaiPegawaiRoute
  '/dashboard/pengadu': typeof DashboardPengaduPengaduRoute
  '/dashboard/responden': typeof DashboardRespondenRespondenRoute
  '/dashboard/admin/home': typeof DashboardAdminAdminHomeRoute
  '/dashboard/admin/internalUser': typeof DashboardAdminAdminInternalUserRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/login': typeof LoginRoute
  '/dashboard/admin': typeof DashboardAdminAdminRouteWithChildren
  '/dashboard/pegawai': typeof DashboardPegawaiPegawaiRoute
  '/dashboard/pengadu': typeof DashboardPengaduPengaduRoute
  '/dashboard/responden': typeof DashboardRespondenRespondenRoute
  '/dashboard/admin/home': typeof DashboardAdminAdminHomeRoute
  '/dashboard/admin/internalUser': typeof DashboardAdminAdminInternalUserRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/login': typeof LoginRoute
  '/dashboard/admin': typeof DashboardAdminRouteWithChildren
  '/dashboard/admin/_admin': typeof DashboardAdminAdminRouteWithChildren
  '/dashboard/pegawai': typeof DashboardPegawaiRouteWithChildren
  '/dashboard/pegawai/_pegawai': typeof DashboardPegawaiPegawaiRoute
  '/dashboard/pengadu': typeof DashboardPengaduRouteWithChildren
  '/dashboard/pengadu/_pengadu': typeof DashboardPengaduPengaduRoute
  '/dashboard/responden': typeof DashboardRespondenRouteWithChildren
  '/dashboard/responden/_responden': typeof DashboardRespondenRespondenRoute
  '/dashboard/admin/_admin/home': typeof DashboardAdminAdminHomeRoute
  '/dashboard/admin/_admin/internalUser': typeof DashboardAdminAdminInternalUserRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/dashboard/admin'
    | '/dashboard/pegawai'
    | '/dashboard/pengadu'
    | '/dashboard/responden'
    | '/dashboard/admin/home'
    | '/dashboard/admin/internalUser'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/dashboard/admin'
    | '/dashboard/pegawai'
    | '/dashboard/pengadu'
    | '/dashboard/responden'
    | '/dashboard/admin/home'
    | '/dashboard/admin/internalUser'
  id:
    | '__root__'
    | '/'
    | '/login'
    | '/dashboard/admin'
    | '/dashboard/admin/_admin'
    | '/dashboard/pegawai'
    | '/dashboard/pegawai/_pegawai'
    | '/dashboard/pengadu'
    | '/dashboard/pengadu/_pengadu'
    | '/dashboard/responden'
    | '/dashboard/responden/_responden'
    | '/dashboard/admin/_admin/home'
    | '/dashboard/admin/_admin/internalUser'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  LoginRoute: typeof LoginRoute
  DashboardAdminRoute: typeof DashboardAdminRouteWithChildren
  DashboardPegawaiRoute: typeof DashboardPegawaiRouteWithChildren
  DashboardPengaduRoute: typeof DashboardPengaduRouteWithChildren
  DashboardRespondenRoute: typeof DashboardRespondenRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  LoginRoute: LoginRoute,
  DashboardAdminRoute: DashboardAdminRouteWithChildren,
  DashboardPegawaiRoute: DashboardPegawaiRouteWithChildren,
  DashboardPengaduRoute: DashboardPengaduRouteWithChildren,
  DashboardRespondenRoute: DashboardRespondenRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/login",
        "/dashboard/admin",
        "/dashboard/pegawai",
        "/dashboard/pengadu",
        "/dashboard/responden"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/dashboard/admin": {
      "filePath": "dashboard/admin",
      "children": [
        "/dashboard/admin/_admin"
      ]
    },
    "/dashboard/admin/_admin": {
      "filePath": "dashboard/admin/_admin.tsx",
      "parent": "/dashboard/admin",
      "children": [
        "/dashboard/admin/_admin/home",
        "/dashboard/admin/_admin/internalUser"
      ]
    },
    "/dashboard/pegawai": {
      "filePath": "dashboard/pegawai",
      "children": [
        "/dashboard/pegawai/_pegawai"
      ]
    },
    "/dashboard/pegawai/_pegawai": {
      "filePath": "dashboard/pegawai/_pegawai.tsx",
      "parent": "/dashboard/pegawai"
    },
    "/dashboard/pengadu": {
      "filePath": "dashboard/pengadu",
      "children": [
        "/dashboard/pengadu/_pengadu"
      ]
    },
    "/dashboard/pengadu/_pengadu": {
      "filePath": "dashboard/pengadu/_pengadu.tsx",
      "parent": "/dashboard/pengadu"
    },
    "/dashboard/responden": {
      "filePath": "dashboard/responden",
      "children": [
        "/dashboard/responden/_responden"
      ]
    },
    "/dashboard/responden/_responden": {
      "filePath": "dashboard/responden/_responden.tsx",
      "parent": "/dashboard/responden"
    },
    "/dashboard/admin/_admin/home": {
      "filePath": "dashboard/admin/_admin.home.tsx",
      "parent": "/dashboard/admin/_admin"
    },
    "/dashboard/admin/_admin/internalUser": {
      "filePath": "dashboard/admin/_admin.internalUser.tsx",
      "parent": "/dashboard/admin/_admin"
    }
  }
}
ROUTE_MANIFEST_END */
